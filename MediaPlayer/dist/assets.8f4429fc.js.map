{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","console","log","visibilityState","video","querySelector","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MCAMoB,GFAGpB,ACAAmB,MCAT,CAAgB,CDAhB,GDAA,ACAoB,CDAClB,ACAC,MDAtB,EAA6B;AAC3B,AEAAoB,EAAAA,KFAKnB,KAAL,CEAW,EFAED,CEAC,KFAK,CAACE,EAApB;AACA,AEAE,ADDJgB,ODCOf,CCDC,CCCCkB,ADDAhB,KDCP,GAAeL,CEAb,ADDJ,CAAmBa,ECCE,CDDrB,CDCuB,CAACV,CEApB,ADDqB,MDCR,IAAkB,ACDAG,EDCjC,ICDuB,EAAkB;AEG3C,ADDI,ADDF,MEEI+B,AFFA,CAAC/B,ECCEgB,ECCE,EFFE,CEECM,AFFAnB,KAAZ,EAAmB,CEEC,CAAC6B,IDDnB,GAA0B,KAAKhB,CCCrB,CAAuB,OAAvB,CAAd,QDD8B,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFCF,AGCF,ADDI,ADDAjB,IAAAA,EEEEA,CHDCF,EEAEoB,CDDC,CAACf,CEEC,GAAG,CFFX,GDCF,AGCiBV,AFFA,IAAf,QCCA,GAA8B,KCCnB,ADDwByB,CCCR,qBDDG,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFCH,AGCCrB,ADDC,ADDA,EEEDA,EAAE,EAAEmC,KADyB;AAE7BlC,EAAAA,OAAO,EAAE,CAAC,IAAIe,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AHAXpB,AGF+B,ADC7Bc,ADDAP,CEAa,CAAf,ADCEO,ADDAP,GCCG,CAACA,EDDE,CAACC,EDEE,CAACF,AEDP,CDDH,CCCY,OFCd,CAAsBD,YAAtB,GAAqC,YAAY;AAC/C,AGEF,ADHI,ADDH,CALD,KESMmC,EHFEjC,CEDCA,KFCK,CEDV,CCGY,CHFC,CEDCA,CCGCsB,KDHf,GCGuB,CAACU,aAAT,CAAuB,aAAvB,CAAnB;AHDI/B,AEDA,IFCAA,IAAI,EAAE,AEDAkB,MFCM,EEDE,GFCGlB,AEDA,IFCL,AEDSmB,EFAR,kBEAI,CAAyB,KAAKJ,kBAA9B,EAAkD;AFEnEd,AGCJ+B,ADFMlB,IFCFb,EEDEa,GFCG,CGCC,CHDC,AGCAmB,IDFI,ADDAtB,EDEE,AEDA,CCEjB,GAAqB,CHDCV,AEDAa,KFCL,AGCUf,EHHV,IGGgB,CAACQ,UAAP,EAA3B;AHAIb,AEHmE,IFGnEA,CEHiB,CAAjB,GFGK,EAAE,KAAKA,KAHC;AGKjB,ADFIwB,IAAAA,ECEEgB,MDFM,CAACd,GCEG,GAAGC,CDFf,CAAiB,KAAKtB,CCEC,CAACgC,IDFP,CAAYrC,KAA7B,GCEe,CAAuB,aAAvB,CAAnB;AHDI,AECA2B,IAAAA,IFDInB,IECI,CFDR,AECSoB,GFDG,aECZ,CAA0B,kBAA1B,EAA8C,KAAKL,sBAAnD;AFAE,AGCNiB,ADAG,UCAO,CAACD,EHDE,KAAKvC,AGClB,GAAqB,EHDR,CAAWQ,GGCG,EHDrB;AACD,AGCH,KHPe,CGOXH,MAAM,CAACL,KAAP,CAAaQ,KAAjB,EAAwB;AACtBH,ADDFgB,EAAAA,ECCEhB,MAAM,CAACW,MAAP,GDDgB,CAACa,OAAD,EAAU;AFA1B,AGED,ADDC,GCDF,KHAMrB,CGEC,CDDCsB,GFDN,CAAUrB,CECC,GAAGoB,CFDd,EAAiB,IECI,CAAC,CAAD,CAArB;AFAE,AGEFxB,ADAA,ICAAA,MAAM,ADAA0B,CFFC/B,AGEAe,IAAP,CHFE,CAAWP,EEEE,GFFb,AEEgBsB,GFFGrB,EEEE,CAACuB,EFFtB,eEEgB,IAA2B,KAAKZ,SAAlD;AFDC,AGEF;AACF,ADAG,CCNJ,ODMQW,SAAJ,EAAe;AFZF,AEaX,GFbJ,QEaS1B,MAAL,CAAYC,IAAZ;AFDJ,AGEF,ADAK,ICAD,CDFA,EFAGJ,IEEI,GFFT,CAAaQ,OAAb,CAAsBC,AGED8B,MHFA,GGEvB,CHFmC,CGED;AHD9B9B,AGEF8B,ADAI,ECAJA,EHFE9B,MAAM,CAACC,AGEA,ADAAP,CCACqC,EHFR,CAAWrC,EEET,CAAYE,GFFd,EEEE,ECAJ,CAAwBoC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAkDC,KAAD,IAAW;AHD3D,AGECZ,ADAC,GFJH,CGIEA,OAAO,CAACC,GAAR,CAAYW,KAAK,CAACC,OAAlB;AHDH,AGEE,CHlBH,EGgBE;AAGD,ADDGb,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AFAJhC,AECG,WFDQ,CAACM,SAAZ,CAAsBE,IAAtB,GAA6B,YAAY;AACvC,OAAKN,KAAL,CAAWM,IAAX;AACD,AEACiB,CFFF,CEEEA,sBAAsB,GAAG;AACvB,UAAMQ,SAAS,GAAGJ,QAAQ,CAACQ,eAAT,KAA6B,SAA/C;AFCJrC,WAAW,CAACM,SAAZ,CAAsBG,KAAtB,GAA8B,YAAY;AACxC,AEDE,OFCGP,CEDC+B,IFCN,CAAWxB,IEDT,CFCF,CEDiB;AFElB,AEDK,CFDN,UECWF,MAAL,CAAYC,IAAZ;AACD,KAFD,MAEO;AFEXR,AEDM,WFCK,AEDAO,CFCCD,KEDN,CAAYG,GFClB,CAAsBM,CEDhB,SFCN,GAAmC,YAAY;AAC7C,AEDG,MFCC,KAAKb,KAAL,CAAWc,MAAf,EAAuB;AACrB,AEDD,SFCMR,IAAL;AACD,GAFD,MAEO;AACL,AErCY,SFqCPC,KAAL;AACD;AACF,CAND,cEIeW;;AFIfpB,WAAW,CAACM,SAAZ,CAAsBW,IAAtB,GAA6B,YAAY;AACvC,OAAKf,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AACD,CAFD;;AAIAV,WAAW,CAACM,SAAZ,CAAsBY,MAAtB,GAA+B,YAAY;AACzC,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACD,CAFD;;eAIeV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\n  this.media = config.el;\n  this.plugins = config.plugins || [];\n\n  this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function () {\n  const player = {\n    play: () => this.play(),\n    pause: () => this.pause(),\n    media: this.media,\n    get muted() {\n      return this.media.muted;\n    },\n    set muted(value) {\n      this.media.muted = value;\n    },\n  };\n\n  this.plugins.forEach((plugin) => {\n    plugin.run(player);\n  });\n};\n\nMediaPlayer.prototype.play = function () {\n  this.media.play();\n};\n\nMediaPlayer.prototype.pause = function () {\n  this.media.pause();\n};\n\nMediaPlayer.prototype.togglePlay = function () {\n  if (this.media.paused) {\n    this.play();\n  } else {\n    this.pause();\n  }\n};\n\nMediaPlayer.prototype.mute = function () {\n  this.media.muted = true;\n};\n\nMediaPlayer.prototype.unmute = function () {\n  this.media.muted = false;\n};\n\nexport default MediaPlayer;\n","function AutoPlay() {}\nAutoPlay.prototype.run = function (player) {\n  if (!player.muted) {\n    player.muted = true;\n  }\n  player.play();\n};\n\nexport default AutoPlay;\n","class AutoPause {\r\n  constructor() {\r\n    this.threshold = 0.25;\r\n    this.handleIntersection = this.handleIntersection.bind(this);\r\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n  }\r\n  run(player) {\r\n    this.player = player;\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold,\r\n    });\r\n    observer.observe(this.player.media);\r\n\r\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\r\n  }\r\n  handleIntersection(entries) {\r\n    const entry = entries[0];\r\n\r\n    const isVisible = entry.intersectionRatio >= this.threshold;\r\n\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n    console.log(entry);\r\n  }\r\n  handleVisibilityChange() {\r\n    const isVisible = document.visibilityState === \"visible\";\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AutoPause;\r\n","import MediaPlayer from \"./MediaPlayer.js\";\nimport AutoPlay from \"./plugins/AutoPlay.js\";\nimport AutoPause from \"./plugins/AutoPause.js\";\n\nconst video = document.querySelector(\"video\");\nconst player = new MediaPlayer({\n  el: video,\n  plugins: [new AutoPlay(), new AutoPause()],\n});\n\nconst playButton = document.querySelector(\"#playButton\");\nplayButton.onclick = () => player.togglePlay();\n\nconst muteButton = document.querySelector(\"#muteButton\");\nmuteButton.onclick = () => {\n  if (player.media.muted) {\n    player.unmute();\n  } else {\n    player.mute();\n  }\n};\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker.register(\"/sw.js\").catch((error) => {\n    console.log(error.message);\n  });\n}\n"]}