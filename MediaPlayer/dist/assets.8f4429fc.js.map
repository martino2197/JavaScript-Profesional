{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.ts","assets/index.js"],"names":["MediaPlayer","constructor","config","media","el","plugins","_initPlugins","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","prototype","video","document","querySelector","AutoPause","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA,ADAA,IAAA,SAAA;AFFA,AEEA,ADFA,MDAMA,GCAGmB,QDAT,ACAA,CDAkB,ECAE,CAAE;ADCpBlB,AECF,EFDEA,UECF,CFDa,CAACC,MAAD,EAAS;AAClB,AEIF,ADLFiB,QAAQ,CDCChB,ACDAiB,ECKP,GFJE,GAAalB,CCDjB,CAAmBY,CCKjB,EDLF,CDCuB,AEIrB,CFJsBV,CCDC,CDCrB,SCD+BG,MAAV,EAAkB;ADEvC,AGCJ,ADGI,ADLF,MEEIc,AFFA,CAACd,EDCEF,AEIA,ECHE,EFFE,CEECiB,AFFAZ,EDCV,EEIA,CFJeR,ACDjB,ECKmB,ADLA,CEEC,CAACqB,EHDE,AEIrB,CFJsBlB,OAAP,GGCL,CHDuB,AGCA,EHDjC,KGCU,CAAd;AACA,ADGI,ADLAE,IAAAA,EEEEA,GDGG,CDLC,CAACG,CEEC,GAAG,CFFX,GEEeV,AFFA,IAAf,ICKA,GAA0B,KAAK,ICHpB,CAAgB,aDGD,CAAwB,IAAxB,CAA6B,IAA7B,CAA1B;AFHA,AGCFI,ADGE,ADLD,EEEDA,EAAE,EAAEiB,GHDGf,AEIA,ECJsB,UHA3B,UEIA,GAA8B,KAAK,sBAAL,CAA4B,IAA5B,CAAiC,IAAjC,CAA9B;AFHD,AGCDD,ADGC,ECHDA,OAAO,EAAE,CAAC,IAAIc,iBAAJ,EAAD,EAAiB,IAAIK,kBAAJ,EAAjB;AAFoB,AFA7BjB,CEAa,CAAf,AFAEA,MAAM,CAACC,IAAP;ADEAF,AGGF,ADCE,ADLD,CALD,CDMEA,AEIA,ICDImB,KDCJ,CAAA,EFJY,EGGE,CHHC,EGGEH,EDCjB,CAAA,GAAA,ECDyB,CAACC,ADC1B,UAAI,GCDa,CAAuB,EDCxC,EAAU,SCDO,CAAnB;AHFI,AEIA,SAAK,CFJChB,KEIN,CFJY,EEIE,CFJC,KEIf;AFHEC,AGENiB,ADEI,MFJEjB,EEII,EFJA,AGEA,CAACkB,CHFC,GCDGP,CCKG,EFJA,AGElB,CDEqB,ECFA,EHFEX,AEIE,IFJP,AGESD,EHHR,IGGc,CAACQ,SDEb,CCFM,ADEmB,ECF9C,GDEmD,kBAA9B,EAAkD;AFHjEN,AEIA,MFJAA,AEIA,KFJK,EAAE,EEIE,EAAE,EFJE,GEIG,EFJEA,KAAL,EAFA;AAGbN,AGEN,ADAuE,KAAlD,CFFfA,AGEAwB,ADAF,KFFO,EAAE,GGEG,EHFExB,CGECmB,IHLA,IGKQ,CAACC,aAAT,CAAuB,aAAvB,CAAnB;ADGI,IAAA,QAAQ,CAAC,OAAT,CAAiB,KAAK,MAAL,CAAY,KAA7B;AFJE,AGENI,ADII,IAAA,MFNMjB,AGEA,CAACgB,CDIC,CAAC,EFNP,GAAY,AGElB,GAAqB,MAAM,EDIvB,CAA0B,kBAA1B,EAA8C,KAAK,sBAAnD;AFLI,AGEN,ADIC,GARD,GCIInB,MAAM,CAACJ,EHFE,GGET,CAAaO,CHFCP,IGElB,CHFa,CAAWO,AGEA,KHFlB;AACD,AGEHH,IAAAA,GHRe,GGQT,CAACW,MAAP;AACD,ADGO,EAAA,CCLR,MAEO,EDGC,CAAA,SAAA,CAAA,kBAAA,GAAR,UAA2B,OAA3B,EAA+D;AFL3D,AGGFX,ADGA,ICHAA,IDGM,EFNAG,AGGA,CAACO,EDGI,EFNT,AGGF,CHHYN,AEME,KFNZ,EAAiB,AEME,CAAC,CAAD,CAArB;AFLI,AGGL,ADIC,IAAA,KAAK,IFPIR,KAAL,CAAWO,KAAX,GAAmBC,KAAnB;AACD,AGGN,ADIG,CCVJ,ODUU,SAAS,GAAG,KAAK,CAAC,iBAAN,IAA2B,KAAK,SAAlD;;AFhBe,AGcnB,ADII,ICJA,CHdA,GEkBI,SAAJ,EAAe,ICJIiB,SAAvB,EAAkC;AHF9B,AGGFA,ADII,ECJJA,OHHOvB,EGGE,ADIA,CCJCwB,IHHR,CAAajB,AEOX,CAAY,IAAZ,EFPF,CAAsBC,AGGxB,CAAwBiB,KHHD,GGGvB,CHHmC,AGGF,sCAAjC,EAA2CC,KAA3C,CAAkDC,KAAD,IAAW;AHFxDnB,AGGFoB,ADIC,ICJDA,CDEA,CFLEpB,KGGK,ADIA,CFPC,AGGAqB,CHHCpB,EGGT,CHHE,AGGUkB,CHHCzB,IGGI,CAAC4B,CHHhB,MGGF;AHFC,AGGF,ADIG,GCNJ,EHHE,MESO,MAAL,CAAY,KAAZ;AFNH,AGGF,ADII;;AFNH3B,AEOE,EFPFA,EEOE,EFPE,GAAG,EEOE,CAAC,GAAR,CAAY,KAAZ;AFNA,AEOD,GAZO,MFKDL,KAAL,CAAWK,IAAX;AACD;AEOO,EAAA,SAAA,CAAA,SAAA,CAAA,sBAAA,GAAR,YAAA;AFNAC,AEOE,EFPFA,KAAK,CEOG,EFPA,OEOS,GAAG,QAAQ,CAAC,eAAT,KAA6B,SAA/C;AFNA,SAAKN,KAAL,CAAWM,KAAX;AACD,AEMC,QAAI,SAAJ,EAAe;AACb,WAAK,MAAL,CAAY,IAAZ;AFNJM,AEOG,EFPHA,GEKE,MAEO,CFPC,GAAG;AACX,AEOE,QFPE,GEOG,EFPEZ,IEOP,CFPE,AEOU,CFPCa,IEOb,EFPF,EAAuB;AACrB,AEOD,WFPMR,IAAL;AACD,AEOF,GAPO,EFFN,MAEO;AACL,WAAKC,KAAL;AACD,AEML,SAAA,SAAA;AFLG,AElCH,CAAA,EAAA;;AFmCEQ,AEMF,EFNEA,IAAI,CEMN,CAAA,CFNS,MEMT,GAAe,SAAf;AFLI,SAAKd,KAAL,CAAWO,KAAX,GAAmB,IAAnB;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,SAAKf,KAAL,CAAWO,KAAX,GAAmB,KAAnB;AACD;;AA1Ce;;eA6CHV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\n  constructor(config) {\n    this.media = config.el;\n    this.plugins = config.plugins || [];\n\n    this._initPlugins();\n  }\n  _initPlugins() {\n    const player = {\n      play: () => this.play(),\n      pause: () => this.pause(),\n      media: this.media,\n      get muted() {\n        return this.media.muted;\n      },\n      set muted(value) {\n        this.media.muted = value;\n      },\n    };\n\n    this.plugins.forEach((plugin) => {\n      plugin.run(player);\n    });\n  }\n  play() {\n    this.media.play();\n  }\n  pause() {\n    this.media.pause();\n  }\n  togglePlay() {\n    if (this.media.paused) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  }\n  mute() {\n    this.media.muted = true;\n  }\n  unmute() {\n    this.media.muted = false;\n  }\n}\n\nexport default MediaPlayer;\n","function AutoPlay() {}\nAutoPlay.prototype.run = function (player) {\n  if (!player.muted) {\n    player.muted = true;\n  }\n  player.play();\n};\n\nexport default AutoPlay;\n","import MediaPlayer from '../MediaPlayer'\r\n\r\nclass AutoPause {\r\n  private threshold: number\r\n  player: MediaPlayer\r\n  \r\n  constructor() {\r\n    this.threshold = 0.25;\r\n    this.handleIntersection = this.handleIntersection.bind(this);\r\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n  }\r\n  run(player) {\r\n    this.player = player;\r\n    const observer = new IntersectionObserver(this.handleIntersection, {\r\n      threshold: this.threshold,\r\n    });\r\n    observer.observe(this.player.media);\r\n\r\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\r\n  }\r\n  private handleIntersection(entries: IntersectionObserverEntry[]) {\r\n    const entry = entries[0];\r\n\r\n    entry\r\n    const isVisible = entry.intersectionRatio >= this.threshold;\r\n\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n    console.log(entry);\r\n  }\r\n  private handleVisibilityChange() {\r\n    const isVisible = document.visibilityState === \"visible\";\r\n    if (isVisible) {\r\n      this.player.play();\r\n    } else {\r\n      this.player.pause();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AutoPause;\r\n","import MediaPlayer from \"./MediaPlayer.js\";\nimport AutoPlay from \"./plugins/AutoPlay.js\";\nimport AutoPause from \"./plugins/AutoPause.ts\";\n\nconst video = document.querySelector(\"video\");\nconst player = new MediaPlayer({\n  el: video,\n  plugins: [new AutoPlay(), new AutoPause()],\n});\n\nconst playButton = document.querySelector(\"#playButton\");\nplayButton.onclick = () => player.togglePlay();\n\nconst muteButton = document.querySelector(\"#muteButton\");\nmuteButton.onclick = () => {\n  if (player.media.muted) {\n    player.unmute();\n  } else {\n    player.mute();\n  }\n};\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker.register(\"/sw.js\").catch((error) => {\n    console.log(error.message);\n  });\n}\n"]}